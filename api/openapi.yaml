openapi: 3.0.3
info:
  title: "Sport Shop"
  description: This is an API reference for my sport shop pet project based on OAS 3.0 specification. Check out my other projects at [https://github.com/kirich-yo](https://github.com/kirich-yo).
  contact:
    email: gdleader03@gmail.com
  license:
    name: GNU Lesser General Public License v3.0
    url: https://www.gnu.org/licenses/lgpl-3.0.html
  version: 1.0.0
servers:
  - url: https://development.restapi-sportshop.com/api/v1
    description: Development server
  - url: https://staging.restapi-sportshop.com/api/v1
    description: Staging server
  - url: https://api.restapi-sportshop.com/api/v1
    description: Production server
tags:
  - name: auth
    description: Authentification and authorization
  - name: item
    description: Everything about items
  - name: user
    description: User management
  - name: role
    description: Role and permission management
  - name: warehouse
    description: Everything about warehouses
  - name: category
    description: Manage item categories
  - name: order
    description: Manage orders
  - name: review
    description: Everything about reviews
  - name: cart
    description: Cart management
paths:
  /item:
    get:
      tags:
        - item
      summary: Get all items from the catalog.
      description: Returns all items from the catalog.
      operationId: getItems
      responses:
        '200':
          description: A list of items.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                type: array
                xml:
                  name: items
                  wrapped: true
                items:
                  $ref: '#/components/schemas/Item'
        '500':
          description: Internal server error.
    post:
      tags:
        - item
      summary: Add an item to the catalog
      description: Adds an item.
      operationId: addItem
      requestBody:
        $ref: '#/components/requestBodies/Item'
      responses:
        '201':
          description: Item created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Bad request body.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
        '500':
          description: Internal server error.
      security:
        - sportshop_jwt: []
  /item/{itemID}:
    get:
      tags:
        - item
      summary: Get an item by ID
      description: Returns the item by ID.
      operationId: getItem
      parameters:
        - name: itemID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A single item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Invalid ID supplied.
        '404':
          description: Item not found.
        '500':
          description: Internal server error.
    patch:
      tags:
        - item
      summary: Update item info
      description: Updates the item by ID.
      operationId: updateItem
      parameters:
        - name: itemID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: '#/components/requestBodies/Item'
      responses:
        '200':
          description: The item has been succesfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Invalid ID supplied.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
        '404':
          description: Item not found.
        '500':
          description: Internal server error.
      security:
        - sportshop_jwt: []
    delete:
      tags:
        - item
      summary: Delete an item from the catalog
      description: Deletes the item by ID.
      operationId: deleteItem
      parameters:
        - name: itemID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: The item has been succesfully deleted.
        '400':
          description: Invalid ID supplied.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
        '500':
          description: Internal server error.
      security:
        - sportshop_jwt: []
  /item/{itemID}/reviews:
    get:
      tags:
        - item
      summary: Find the item by ID and get all its reviews
      description: Returns a list of reviews by item ID.
      operationId: getItemReviews
      parameters:
        - name: itemID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A list of item reviews.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
            application/xml:
              schema:
                type: array
                xml:
                  name: reviews
                  wrapped: true
                items:
                  $ref: '#/components/schemas/Review'
        '400':
          description: Invalid ID supplied.
        '401':
          description: The client is not authorized.
        '404':
          description: Item not found.
        '500':
          description: Internal server error.
    post:
      tags:
        - item
      summary: Publish an item review
      description: Adds a review to the item.
      operationId: addItemReview
      parameters:
        - name: itemID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: '#/components/requestBodies/Review'
      responses:
        '201':
          description: The review has been successfully added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
            application/xml:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid ID supplied.
        '401':
          description: The client is not authorized.
        '404':
          description: Item not found.
        '500':
          description: Internal server error.
      security:
        - sportshop_jwt: []
  /user/{username}:
    get:
      tags:
        - user
      summary: Get user account info
      description: Returns user info by login.
      operationId: getUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied.
        '404':
          description: User not found.
    patch:
      tags:
        - user
      summary: Change user account info
      description: Changes account info.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '200':
          description: Account info has been changed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
        '404':
          description: User not found.
      security:
        - sportshop_jwt: []
    delete:
      tags:
        - user
      summary: Delete user account
      description: Deletes a user account.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The user has been successfully deleted.
        '400':
          description: Invalid username supplied.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
      security:
        - sportshop_jwt: []
  /user/{username}/role:
    get:
      tags:
        - user
      summary: Get user role
      description: Returns user role by username.
      operationId: getUserRole
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A role.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: Invalid username supplied.
        '404':
          description: User not found.
  /auth/login:
    post:
      tags:
        - auth
      summary: Log in and get an auth token
      description: Returns a JWT token that may be used later in the authorization process.
      operationId: loginUser
      requestBody:
        $ref: '#/components/requestBodies/LoginForm'
      responses:
        '201':
          description: JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: Bad request.
        '401':
          description: Invalid username or password.
        '500':
          description: Internal server error.
  /auth/register:
    post:
      tags:
        - auth
      summary: Register a new user account
      description: Registers a new user.
      operationId: registerUser
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '201':
          description: New user has been successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
            application/xml:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: Bad request.
        '500':
          description: Internal server error.
  /auth/refresh:
    post:
      tags:
        - auth
      summary: Refresh JWT token
      description: Refreshes a JWT access token.
      operationId: refreshToken
      requestBody:
        $ref: '#/components/requestBodies/RefreshToken'
      responses:
        '201':
          description: JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
            application/xml:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          description: Unauthorized.
        '500':
          description: Internal server error.
  /role:
    get:
      tags:
        - role
      summary: Get all roles
      description: Returns a list of all roles.
      operationId: getRoles
      responses:
        '200':
          description: A list of roles.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                type: array
                xml:
                  name: roles
                  wrapped: true
                items:
                  $ref: '#/components/schemas/Role'
  /role/{roleID}:
    get:
      tags:
        - role
      summary: Get a role by ID
      description: Returns a role by ID.
      operationId: getRole
      parameters:
        - name: roleID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A role.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/xml:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: Invalid ID supplied.
        '404':
          description: Role not found.
  /warehouse:
    get:
      tags:
        - warehouse
      summary: Get all warehouses
      description: Returns a list of warehouses.
      operationId: getWarehouses
      responses:
        '200':
          description: A list of warehouses.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                type: array
                xml:
                  name: warehouses
                  wrapped: true
                items:
                  $ref: '#/components/schemas/Warehouse'
  /warehouse/{warehouseID}:
    get:
      tags:
        - warehouse
      summary: Get a warehouse by ID
      description: Returns a warehouse by ID.
      operationId: getWarehouse
      parameters:
        - name: warehouseID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A warehouse.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Warehouse'
        '400':
          description: Invalid ID supplied.
        '404':
          description: Warehouse not found.
  /warehouse/{warehouseID}/items:
    get:
      tags:
        - warehouse
      summary: Get all items contained in the warehouse
      description: Finds a warehouse by ID and returns all items contained in the warehouse.
      operationId: getWarehouseItems
      parameters:
        - name: warehouseID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A list of items in a warehouse.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
            application/xml:
              schema:
                type: array
                xml:
                  name: items
                  wrapped: true
                items:
                  $ref: '#/components/schemas/Item'
        '400':
          description: Invalid ID supplied.
        '404':
          description: Warehouse not found.
  /category:
    get:
      tags:
        - category
      summary: Get all categories
      description: Returns all categories.
      operationId: getCategories
      responses:
        '200':
          description: A list of categories.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                type: array
                xml:
                  name: categories
                  wrapped: true
                items:
                  $ref: '#/components/schemas/Category'
  /category/{categoryID}:
    get:
      tags:
        - category
      summary: Get a category by ID
      description: Returns a category by ID.
      operationId: getCategory
      parameters:
        - name: categoryID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A category.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Invalid ID supplied.
        '404':
          description: Category not found.
  /order:
    post:
      tags:
        - order
      summary: Place a new order
      description: Creates a new order.
      operationId: addOrder
      requestBody:
        $ref: '#/components/requestBodies/Order'
      responses:
        '201':
          description: The order has been successfully placed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request.
        '401':
          description: The client is not authorized.
      security:
        - sportshop_jwt: []
  /order/{orderID}:
    get:
      tags:
        - order
      summary: Get an order by ID
      description: Returns an order by ID.
      operationId: getOrder
      parameters:
        - name: orderID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: An order.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
        '404':
          description: Order not found.
      security:
        - sportshop_jwt: []
    patch:
      tags:
        - order
      summary: Change an order status by ID
      description: Updates an order by ID.
      operationId: updateOrder
      parameters:
        - name: orderID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: An order.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: The order has been succesfully updated.
        '400':
          description: Invalid ID supplied.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
        '404':
          description: Order not found.
      security:
        - sportshop_jwt: []
    delete:
      tags:
        - order
      summary: Delete an order by ID
      description: Deletes an order by ID.
      operationId: deleteOrder
      parameters:
        - name: orderID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: The order has been succesfully deleted.
        '400':
          description: Invalid ID supplied.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
      security:
        - sportshop_jwt: []
  /review/{reviewID}:
    get:
      tags:
        - review
      summary: Get a review by ID
      description: Returns a review by ID.
      operationId: getReview
      parameters:
        - name: reviewID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A review.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
            application/xml:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid ID supplied.
        '404':
          description: Review not found.

    patch:
      tags:
        - review
      summary: Update a review by ID
      description: Updates an item review by ID.
      operationId: updateReview
      parameters:
        - name: reviewID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: '#/components/requestBodies/Review'
      responses:
        '200':
          description: The review has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
            application/xml:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid ID supplied.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
        '404':
          description: Review not found.
      security:
        - sportshop_jwt: []
    delete:
      tags:
        - review
      summary: Delete a review by ID
      description: Deletes a review by ID.
      operationId: deleteReview
      parameters:
        - name: reviewID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: The review has been succesfully deleted.
        '400':
          description: Invalid ID supplied.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
      security:
        - sportshop_jwt: []
  /cart:
    post:
      tags:
        - cart
      summary: Place a new cart
      description: Creates a new cart.
      operationId: addCart
      requestBody:
        $ref: '#/components/requestBodies/Cart'
      responses:
        '201':
          description: The cart been successfully placed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cart'
        '400':
          description: Bad request.
        '401':
          description: The client is not authorized.
      security:
        - sportshop_jwt: []
  /cart/{cartID}:
    get:
      tags:
        - cart
      summary: Get a cart by ID
      description: Returns a cart by ID.
      operationId: getCart
      parameters:
        - name: cartID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cart'
        '400':
          description: Invalid ID supplied.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
        '404':
          description: Cart not found.
      security:
        - sportshop_jwt: []
    patch:
      tags:
        - cart
      summary: Change a cart by ID
      description: Updates a cart by ID.
      operationId: updateCart
      parameters:
        - name: cartID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: A cart.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/xml:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '200':
          description: The cart has been succesfully updated.
        '400':
          description: Invalid ID supplied.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
        '404':
          description: Order not found.
      security:
        - sportshop_jwt: []
    delete:
      tags:
        - cart
      summary: Delete a cart by ID
      description: Deletes a cart by ID.
      operationId: deleteCart
      parameters:
        - name: cartID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: The cart has been succesfully deleted.
        '400':
          description: Invalid ID supplied.
        '401':
          description: The client is not authorized.
        '403':
          description: The client does not have appropriate permissions to perform the operation.
      security:
        - sportshop_jwt: []
components:
  schemas:
    Role:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Customer
        permissions:
          type: array
          items:
            type: string
      xml:
        name: role
    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: Fitness equipment
      xml:
        name: category
    User:
      type: object
      required:
        - id
        - firstName
        - phoneNumber
        - role
      properties:
        id:
          type: integer
          format: int32
          example: 456
        username:
          type: string
          example: johndoe
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        dateOfBirth:
          type: string
          format: date-time
          example: 2000-01-01
        photoURL:
          type: string
          example: https://cdn.sportshop.com/59b1f1ce-7299-4e9b-93c4-cb5b94641864.jpg
      xml:
        name: user
    Item:
      type: object
      required:
        - id
        - name
        - price
        - photoURL
      properties:
        id:
          type: integer
          format: int32
          example: 123
        name:
          type: string
          example: Dumbbells Set of 2 Hex Rubber Encased Dumbbells, Weights Dumbbells Set with Metal Handle for Exercise and Fitness (25 lb, Pair)
        categoryID:
          type: integer
          format: int32
          example: 1
        price:
          type: number
          format: float
          example: 111.82
        salePrice:
          type: number
          format: float
          example: 95.047
        rating:
          type: number
          format: float
          minimum: 1.00
          maximum: 5.00
          example: 4.76
        reviewCount:
          type: integer
          format: int32
          example: 5794
        photoURL:
          type: string
          example: https://cdn.sportshop.com/032e216c-5630-44a5-b98e-0c77f76a8df4.jpg
      xml:
        name: item
    Warehouse:
      type: object
      required:
        - id
        - address
      properties:
        id:
          type: integer
          format: int32
          example: 1
        address:
          type: string
          example: '125009, Russia, Moscow, ul. Tverskaya, d. 33, kv. 43'
      xml:
        name: warehouse
    Review:
      type: object
      required:
        - id
        - user
        - item
        - rating
        - description
      properties:
        id:
          type: integer
          format: int32
          example: 528
        userID:
          type: integer
          format: int32
          example: 456
        itemID:
          type: integer
          format: int32
          example: 123
        rating:
          type: integer
          format: int32
          minimum: 1
          maximum: 5
          example: 5
        advantages:
          type: string
          example: PERFECT!!
        disadvantages:
          type: string
          example: '-'
        description:
          type: string
          example: This is a gift for my 16 yr old son who lifts weights at the gym. These are great for at home and very compact and easy to store. Love how he can adjust the weight size. Does come all together so this grandma definitely needed help lifting the pkg. Definitely recommend!
      xml:
        name: review
    Cart:
      type: object
      required:
        - id
        - userID
        - itemID
        - amount
      properties:
        id:
          type: integer
          format: int32
        userID:
          type: integer
          format: int32
          example: 789
        itemID:
          type: integer
          format: int32
          example: 123
        amount:
          type: integer
          format: int32
          example: 2
      xml:
        name: cart
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 746
        userID:
          type: integer
          format: int32
          example: 456
        itemID:
          type: integer
          format: int32
          example: 123
        amount:
          type: integer
          format: int32
          example: 2
        shipDate:
          type: string
          format: date-time
          example: 2025-02-23
        status:
          type: string
          enum:
            - placed
            - approved
            - delayed
            - delivered
          example: delivered
        complete:
          type: boolean
          example: true
      xml:
        name: order
    Token:
      properties:
        accessToken:
          type: string
          example: <token>
        refreshToken:
          type: string
          example: <token>
        expiryDate:
          type: string
          format: date-time
          example: '2025-02-13T10:45:27Z'
  requestBodies:
    Item:
      description: An item.
      required: true
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
                example: Dumbbells Set of 2 Hex Rubber Encased Dumbbells, Weights Dumbbells Set with Metal Handle for Exercise and Fitness (25 lb, Pair)
              categoryID:
                type: integer
                format: int32
                example: 1
              price:
                type: number
                format: float
                example: 111.82
              salePrice:
                type: number
                format: float
                example: 95.047
              photoURL:
                type: string
                example: https://cdn.sportshop.com/032e216c-5630-44a5-b98e-0c77f76a8df4.jpg
        application/xml:
          schema:
            properties:
              name:
                type: string
                example: Dumbbells Set of 2 Hex Rubber Encased Dumbbells, Weights Dumbbells Set with Metal Handle for Exercise and Fitness (25 lb, Pair)
              categoryID:
                type: integer
                format: int32
                example: 1
              price:
                type: number
                format: float
                example: 111.82
              salePrice:
                type: number
                format: float
                example: 95.047
              photoURL:
                type: string
                example: https://cdn.sportshop.com/032e216c-5630-44a5-b98e-0c77f76a8df4.jpg
            xml:
              name: item
    User:
      description: A user.
      required: true
      content:
        application/json:
          schema:
            properties:
              username:
                type: string
                example: johndoe
              firstName:
                type: string
                example: John
              lastName:
                type: string
                example: Doe
              dateOfBirth:
                type: string
                format: date-time
                example: 2000-01-01
              photoURL:
                type: string
                example: https://cdn.sportshop.com/59b1f1ce-7299-4e9b-93c4-cb5b94641864.jpg
              password:
                type: string
                format: password
                example: "********"
        application/xml:
          schema:
            properties:
              firstName:
                type: string
                example: John
              lastName:
                type: string
                example: Doe
              dateOfBirth:
                type: string
                format: date-time
                example: 2000-01-01
              photoURL:
                type: string
                example: https://cdn.sportshop.com/59b1f1ce-7299-4e9b-93c4-cb5b94641864.jpg
              password:
                type: string
                format: password
                example: "********"
            xml:
              name: user
    Order:
      description: An order.
      content:
        application/json:
          schema:
            properties:
              itemID:
                type: integer
                format: int32
                example: 123
              amount:
                type: integer
                format: int32
                example: 2
        application/xml:
          schema:
            properties:
              itemID:
                type: integer
                format: int32
                example: 123
              amount:
                type: integer
                format: int32
                example: 2
            xml:
              name: order
    Review:
      description: A review.
      required: true
      content:
        application/json:
          schema:
            properties:
              rating:
                type: integer
                format: int32
                minimum: 1
                maximum: 5
                example: 5
              advantages:
                type: string
                example: PERFECT!!
              disadvantages:
                type: string
                example: '-'
              description:
                type: string
                example: This is a gift for my 16 yr old son who lifts weights at the gym. These are great for at home and very compact and easy to store. Love how he can adjust the weight size. Does come all together so this grandma definitely needed help lifting the pkg. Definitely recommend!
        application/xml:
          schema:
            properties:
              rating:
                type: integer
                format: int32
                minimum: 1
                maximum: 5
                example: 5
              advantages:
                type: string
                example: PERFECT!!
              disadvantages:
                type: string
                example: '-'
              description:
                type: string
                example: This is a gift for my 16 yr old son who lifts weights at the gym. These are great for at home and very compact and easy to store. Love how he can adjust the weight size. Does come all together so this grandma definitely needed help lifting the pkg. Definitely recommend!
            xml:
              name: review
    Cart:
      description: A cart.
      content:
        application/json:
          schema:
            properties:
              itemID:
                type: integer
                format: int32
                example: 2
              amount:
                type: integer
                format: int32
                example: 2
        application/xml:
          schema:
            properties:
              itemID:
                type: integer
                format: int32
                example: 2
              amount:
                type: integer
                format: int32
                example: 2
            xml:
              name: cart
    LoginForm:
      description: A login form.
      content:
        application/json:
          schema:
            properties:
              username:
                type: string
                example: johndoe
              password:
                type: string
                format: password
        application/xml:
          schema:
            properties:
              username:
                type: string
                example: johndoe
              password:
                type: string
                format: password
            xml:
              name: loginForm
    RefreshToken:
      description: A refresh token.
      content:
        text/plain:
          example: <token>
  securitySchemes:
    sportshop_jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT